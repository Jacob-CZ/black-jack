import { useTexture } from '@react-three/drei'
/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.16 public/models/card.glb 
*/

import React, { useEffect, useRef, useState } from 'react'
import { useGLTF } from '@react-three/drei'
import { useSpring, animated } from '@react-spring/three'

export default function Card(props) {
  const texture = useTexture("/textures/" + props.card.file) 
  const [position , setPosition] = useState(props.position)
  const [rotation , setRotation] = useState(props.rotation)
  const [transform, api] = useSpring(() => ({ position: props.position, rotation: props.rotation }))
  const { nodes, materials } = useGLTF('/models/card.glb')
  const moveToDealer = () => {
    api.start({ to: [{ position: [-0.7, -2, 0], rotation: [0, 0, -Math.PI * 0.5] }, 
    { position: [-0.7 , -4, 0], rotation: [0, 0, Math.PI * 0.5]},
      { position: [0.7 - props.dealerIndex * 0.01, -2 - 2* props.dealerIndex, 0], rotation: [0, 0, Math.PI * 0.5]}
  ] }
    )

  }
  const moveToPlayer = () => {
    api.start({ to: [{ position: [-0.7, -2, 0], rotation: [0, 0, -Math.PI * 0.5] }, 
      { position: [-0.7 , -4, 0], rotation: [0, 0, Math.PI * 0.5]},
        { position: [0.7 - props.i * 0.01, -4, 0], rotation: [0, 0, Math.PI * 0.5]},
        { position: [0.7 - props.playerIndex *0.1, -4, 14 - props.playerIndex], rotation: [props.card.double ? Math.PI *0.5 : 0, 0 ,Math.PI * 0.5]}
    ] }
    )}
  // useEffect(() => {
  //   api.start({ position: props.position, rotation: props.rotation })
  // }, [position, rotation])
  useEffect(() => {
    if (props.index === props.i+1 && props.card.to === "dealer") {
      moveToDealer()
    }
    else if (props.index === props.i+1 && props.card.to === "player") {
    moveToPlayer()
    }
  }, [props.index])
  return (
    <animated.group {...props} dispose={null} rotation={transform.rotation} position={transform.position}>
      <group scale={[1, 0.109, 1.438]}>
        <mesh geometry={nodes.Cube_1.geometry} material={materials.Material} />
        <mesh geometry={nodes.Cube_2.geometry} material={materials['Material.001']}>
          <meshStandardMaterial map={texture} />
        </mesh>
        <mesh geometry={nodes.Cube_3.geometry} material={materials['Material.002']} />
      </group>
    </animated.group>
  )
}

useGLTF.preload('/card.glb')
